(function(t){function e(e){for(var a,i,r=e[0],c=e[1],l=e[2],h=0,u=[];h<r.length;h++)i=r[h],o[i]&&u.push(o[i][0]),o[i]=0;for(a in c)Object.prototype.hasOwnProperty.call(c,a)&&(t[a]=c[a]);d&&d(e);while(u.length)u.shift()();return n.push.apply(n,l||[]),s()}function s(){for(var t,e=0;e<n.length;e++){for(var s=n[e],a=!0,r=1;r<s.length;r++){var c=s[r];0!==o[c]&&(a=!1)}a&&(n.splice(e--,1),t=i(i.s=s[0]))}return t}var a={},o={app:0},n=[];function i(e){if(a[e])return a[e].exports;var s=a[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=a,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(s,a,function(e){return t[e]}.bind(null,a));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="/nem2-wallet/";var r=window["webpackJsonp"]=window["webpackJsonp"]||[],c=r.push.bind(r);r.push=e,r=r.slice();for(var l=0;l<r.length;l++)e(r[l]);var d=c;n.push([0,"chunk-vendors"]),s()})({0:function(t,e,s){t.exports=s("cd49")},"00c6":function(t,e,s){"use strict";var a=s("c325"),o=s.n(a);o.a},1:function(t,e){},2:function(t,e){},3:function(t,e){},4:function(t,e){},5:function(t,e){},5188:function(t,e,s){"use strict";var a=s("8258"),o=s.n(a);o.a},"7faf":function(t,e,s){"use strict";var a=s("8fba"),o=s.n(a);o.a},8258:function(t,e,s){},"8fba":function(t,e,s){},c325:function(t,e,s){},cc0e:function(t,e,s){"use strict";var a=s("fedb"),o=s.n(a);o.a},cd49:function(t,e,s){"use strict";s.r(e);var a=s("2b0e"),o=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{attrs:{id:"app"}},[s("header",[s("router-link",{staticStyle:{"text-decoration":"none",color:"white"},attrs:{to:"/"}},[s("span",[t._v("NEM2 wallet")])])],1),s("div",{staticClass:"main__content"},[s("v-fade-transition",{attrs:{mode:"out-in"}},[s("router-view")],1)],1)])},n=[],i=(s("7faf"),s("2877")),r={},c=Object(i["a"])(r,o,n,!1,null,null,null),l=c.exports,d=s("8c4f"),h=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",[s("v-flex",{attrs:{xs12:"",sm6:"","offset-sm3":""}},[null!==t.wallet?s("v-card",[s("v-container",{attrs:{fluid:""}},[s("v-card",{attrs:{flat:""}},[s("v-card-actions",[s("v-card-title",[s("h3",[t._v("Network")])])],1),s("div",[s("table",{staticClass:"table__list",attrs:{border:"1"}},[s("tr",[s("td",{staticClass:"table__key",attrs:{width:"15%"}},[t._v("net")]),s("td",{staticClass:"table__value",attrs:{width:"85%"}},[t._v(t._s(t.network.net))])]),s("tr",[s("td",{staticClass:"table__key",attrs:{width:"15%"}},[t._v("endpoint")]),s("td",{staticClass:"table__value",attrs:{width:"85%"}},[s("a",{attrs:{href:t.network.explorer,target:"_blank"}},[t._v(t._s(t.network.endpoint))])])]),s("tr",[s("td",{staticClass:"table__key",attrs:{width:"15%"}},[t._v("faucet")]),s("td",{staticClass:"table__value",attrs:{width:"85%"}},[s("a",{attrs:{href:t.network.faucetUrl,target:"_blank"}},[t._v(t._s(t.network.faucetUrl))])])])])]),s("v-card-actions",[s("v-card-title",[s("h3",[t._v("Address")])])],1),s("v-card-text",{staticStyle:{"word-break":"break-all"}},[t._v(t._s(t.wallet.address))]),s("v-card",{attrs:{flat:""}},[s("qriously",{attrs:{size:200},model:{value:t.qrJson,callback:function(e){t.qrJson=e},expression:"qrJson"}})],1),s("div",[s("a",{attrs:{href:"#"},on:{click:function(){return t.isShowPrivateKey=!t.isShowPrivateKey}}},[t._v("Show PrivateKey")]),t.isShowPrivateKey?s("div",{staticStyle:{margin:"8px"}},[s("p",{staticStyle:{"word-break":"break-all"}},[t._v(t._s(t.wallet.privateKey))])]):t._e()])],1),s("v-card",{attrs:{flat:""}},[s("v-card-actions",[s("v-card-title",[s("h3",[t._v("Menu")])])],1),s("ul",{staticClass:"menu__list"},[s("li",[s("router-link",{attrs:{to:"./asset_exchange_page"}},[t._v("\n                Exchange Asset\n              ")])],1)])],1),s("v-card",{attrs:{flat:""}},[s("v-card-actions",[s("v-card-title",[s("h3",[t._v("Balance")])]),s("v-spacer"),s("v-btn",{attrs:{fab:"",small:"",text:"",loading:t.isLoading},on:{click:function(e){return t.onLoadBalance()}}},[s("v-icon",[t._v("cached")])],1)],1),0!==t.assets.length?s("div",[s("v-data-table",{attrs:{items:t.assets,"hide-default-footer":"","no-data-text":""},scopedSlots:t._u([{key:"item",fn:function(e){return[s("tr",{on:{click:function(s){return t.onClickAsset(e.item)}}},[s("td",{attrs:{width:"50%"}},[t._v(t._s(e.item.mosaicId))]),s("td",{attrs:{width:"50%"}},[t._v(t._s(e.item.relativeAmount))])])]}}],null,!1,2510852479)})],1):s("div",[s("v-card-text",[t._v("0 xem")])],1),s("v-card-actions",[s("v-card-title",[s("h3",[t._v("Send")])])],1),s("v-form",{staticStyle:{margin:"4px 26px"}},[s("v-text-field",{attrs:{label:"currency",disabled:""},model:{value:t.sendAsset.mosaicId,callback:function(e){t.$set(t.sendAsset,"mosaicId",e)},expression:"sendAsset.mosaicId"}}),s("v-text-field",{attrs:{label:"address",required:"",placeholder:"SADW6WXZVIUWIJ6RAWFSM4F4SJRUBRVOARXXIFSH"},model:{value:t.sendAsset.address,callback:function(e){t.$set(t.sendAsset,"address",e)},expression:"sendAsset.address"}}),s("v-text-field",{attrs:{label:"amount",type:"number",required:""},model:{value:t.sendAsset.relativeAmount,callback:function(e){t.$set(t.sendAsset,"relativeAmount",e)},expression:"sendAsset.relativeAmount"}}),s("v-text-field",{attrs:{label:"message",placeholder:"Hello"},model:{value:t.sendAsset.message,callback:function(e){t.$set(t.sendAsset,"message",e)},expression:"sendAsset.message"}})],1),s("v-flex",[s("v-btn",{staticClass:"white--text",attrs:{color:"blue",loading:t.isLoading,disabled:t.isLoading},on:{click:function(e){return t.onSend()}}},[t._v("SEND")])],1),s("v-flex",[s("v-card-actions",[s("v-card-title",[s("h3",[t._v("Result")])])],1),t._l(t.errorMessages,function(e,a){return s("div",{key:a},[!0!==e?s("div",{staticClass:"errorLabel"},[t._v(t._s(e))]):t._e()])}),s("p",{staticStyle:{"word-break":"break-all"},domProps:{innerHTML:t._s(t.resultMessage)}})],2),s("v-flex",[s("v-card-actions",{staticStyle:{"word-break":"break-all"}},[s("v-card-title",[s("h3",[t._v("Transaction history")])]),t._v("\n              "+t._s(t.transactionHistory.length)+"\n              "),s("v-spacer"),s("v-btn",{attrs:{fab:"",small:"",text:"",loading:t.isHistoryLoading},on:{click:function(e){return t.onLoadTransactionHistory(!0)}}},[s("v-icon",[t._v("cached")])],1)],1),s("div",{staticStyle:{margin:"4px 20px"}},[s("v-data-table",{attrs:{headers:t.historyHeaders,items:t.transactionHistory,options:t.pagination,"hide-default-footer":"","no-data-text":""},on:{"update:options":function(e){t.pagination=e}},scopedSlots:t._u([{key:"item",fn:function(e){return[s("tr",{on:{click:function(s){return t.onClickHistory(e.item)}}},[s("td",{attrs:{width:"20%"}},[t._v(t._s(e.item.amount))]),s("td",{attrs:{width:"50%"}},[t._v(t._s(e.item.hash))]),s("td",{attrs:{width:"30%"}},[t._v(t._s(t._f("dateFormat")(e.item.date)))])])]}}],null,!1,4250521784)}),s("v-btn",{staticClass:"white--text",attrs:{color:"deep-orange lighten-3",loading:t.isHistoryLoading,disabled:t.isHistoryLoading},on:{click:function(e){return t.onLoadTransactionHistory()}}},[t._v("MORE")])],1)],1)],1)],1)],1):t._e()],1)],1)},u=[],m=s("9ab4"),p=s("60a3"),g=s("2f62"),y=s("340b");class v{constructor(){this.address="",this.mosaicId="",this.message=void 0,this.relativeAmount=0,this.divisibility=6}clear(){this.address="",this.message=void 0,this.relativeAmount=0}getRawAmount(){return this.relativeAmount*Math.pow(10,this.divisibility)}}var w=s("10bf"),b=s.n(w);class f{static qrJson(t,e,s,a,o,n){const i={type:e,data:{name:s,addr:a,amount:o*this.divisibility(),msg:n},v:t};return b.a.codeToString(b.a.convert(this.getStr2Array(JSON.stringify(i)),"UTF8"))}static divisibility(){return Math.pow(10,6)}static networkLabel(t){switch(t){case 104:return"MAIN_NET";case 152:return"TEST_NET";case 96:return"MIJIN";case 144:return"MIJIN_TEST";default:return"Unknow"}}static rentalBlock(t){return 86400*t/15}static getStr2Array(t){const e=[];for(let s=0;s<t.length;s++)e.push(t.charCodeAt(s));return e}}var A=s("59ca");s("ea7b");let _=class extends p["d"]{constructor(){super(...arguments),this.balance=0,this.assets=[],this.sendAsset=new v,this.wallet=null,this.qrJson="",this.isShowPrivateKey=!1,this.errorMessages=[],this.resultMessage="",this.network={net:f.networkLabel(Number("144")),endpoint:"https://catapult-test.opening-line.jp:3001",explorer:"http://catapult-test.opening-line.jp:8000",faucetUrl:"https://ol-catapult-faucet.herokuapp.com/"},this.balanceHeaders=[{text:"",value:"currency",align:"center"},{text:"",value:"amount",align:"center"}],this.historyHeaders=[{text:"amount",value:"amount"},{text:"txHash",value:"hash"},{text:"date",value:"date"}],this.isHistoryLoading=!1,this.pagination={descending:!0,itemsPerPage:-1},this.transactionHistory=[]}onValueChange(t,e){this.qrJson=f.qrJson(2,2,"nem2-wallet",t,0,"")}mounted(){p["d"].prototype.$toast("Hello NEM2 wallet"),this.configure(),this.onLogin()}async configure(){try{this.wallet=await this.loadWalletUseCase.execute(),this.onLoadBalance(),this.onLoadTransactionHistory()}catch(t){console.error(t)}}async onLogin(){A["auth"]().onAuthStateChanged(async t=>{if(null==t){const t=await A["auth"]().signInAnonymously();console.log("onLogin","new user",t)}else console.log("onLogin","already exist user",t)})}async onLoadBalance(){this.$store.commit("startLoading");try{if(null===this.wallet)return;this.assets=await this.loadBalanceUseCase.execute(this.wallet.address),console.log("balance",this.assets),0!==this.assets.length&&(this.sendAsset.mosaicId=this.assets[0].mosaicId)}catch(t){console.error("balance",t)}this.$store.commit("stopLoading")}async onSend(){this.$store.commit("startLoading");try{if(this.resultMessage="",0!==this.validation().length)throw new Error("Cloud not send coin.");this.sendAsset.relativeAmount=Number(this.sendAsset.relativeAmount);const e=await this.sendCoinUseCase.execute(this.sendAsset);console.log("sendAsset",e),this.resultMessage=`SUCCESS: ${e.hash}`}catch(t){console.error("sendAsset",t),this.resultMessage=`FAILED: ${t.message}`}p["d"].prototype.$toast(this.resultMessage),this.$store.commit("stopLoading")}onClickAsset(t){console.log("onClickAsset",t),this.sendAsset.mosaicId=t.mosaicId,this.sendAsset.divisibility=t.divisibility}onClickHistory(t){console.log("onClickHistory",t)}async onLoadTransactionHistory(t=!1){this.isHistoryLoading=!0;try{!0===t&&(this.transactionHistory=[],this.nextPagingTransactionId=void 0);const s=await this.loadTransactionHistoryUseCase.executeTransferHistoryAll(100,this.nextPagingTransactionId);console.log("history",s),0!==s.histories.length&&(this.nextPagingTransactionId=s.nextPagingTransactionId),this.transactionHistory.push(...s.histories),console.log("onLoadTransactionHistory",this.transactionHistory,this.nextPagingTransactionId)}catch(e){console.error("onLoadTransactionHistory",e)}this.isHistoryLoading=!1}validation(){return this.errorMessages=[],console.log(this.sendAsset),40!==this.sendAsset.address.length&&this.errorMessages.push('Address (except "-") is 40 characters'),/^[a-zA-Z0-9-]+$/.test(this.sendAsset.address)||this.errorMessages.push("Invalid input"),void 0!==this.sendAsset.message&&this.sendAsset.message.length>1024&&this.errorMessages.push("Maximum number of characters in message has exceeded"),this.errorMessages}clear(){this.sendAsset.clear()}};m["__decorate"]([Object(p["b"])("LoadBalanceUseCase")],_.prototype,"loadBalanceUseCase",void 0),m["__decorate"]([Object(p["b"])("LoadWalletUseCase")],_.prototype,"loadWalletUseCase",void 0),m["__decorate"]([Object(p["b"])("SendCoinUseCase")],_.prototype,"sendCoinUseCase",void 0),m["__decorate"]([Object(p["b"])("LoadTransactionHistoryUseCase")],_.prototype,"loadTransactionHistoryUseCase",void 0),m["__decorate"]([Object(p["e"])("wallet.address")],_.prototype,"onValueChange",null),_=m["__decorate"]([Object(p["a"])({name:"HomePage",computed:Object(g["b"])(["isLoading"]),filters:{dateFormat(t){return Object(y["format"])(t,"YYYY/MM/DD HH:mm:ss")}}})],_);var x=_,H=x,k=(s("5188"),Object(i["a"])(H,h,u,!1,null,"78141214",null)),N=k.exports,T=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"transactionpage"},[null!==t.transactionHistory?s("v-flex",{attrs:{xs12:"",sm6:"","offset-sm3":""}},[s("v-flex",[s("div",{staticStyle:{margin:"8px"}},[s("h2",[t._v("Transaction detail")])]),s("table",{staticClass:"table__list",attrs:{border:"1"}},[s("tr",[s("td",{staticClass:"table__key",attrs:{width:"30%"}},[t._v("id")]),s("td",{staticClass:"table__value",attrs:{width:"70%"}},[t._v(t._s(t.transactionHistory.id))])]),s("tr",[s("td",{staticClass:"table__key",attrs:{width:"30%"}},[t._v("hash")]),s("td",{staticClass:"table__value",attrs:{width:"70%"}},[t._v(t._s(t.transactionHistory.hash))])]),s("tr",[s("td",{staticClass:"table__key",attrs:{width:"30%"}},[t._v("fromAddress")]),s("td",{staticClass:"table__value",attrs:{width:"70%"}},[t._v(t._s(t.transactionHistory.fromAddress))])]),s("tr",[s("td",{staticClass:"table__key",attrs:{width:"30%"}},[t._v("toAddress")]),s("td",{staticClass:"table__value",attrs:{width:"70%"}},[t._v(t._s(t.transactionHistory.toAddress))])]),s("tr",[s("td",{staticClass:"table__key",attrs:{width:"30%"}},[t._v("amount")]),s("td",{staticClass:"table__value",attrs:{width:"70%"}},[t._v(t._s(t.transactionHistory.amount))])]),s("tr",[s("td",{staticClass:"table__key",attrs:{width:"30%"}},[t._v("fee")]),s("td",{staticClass:"table__value",attrs:{width:"70%"}},[t._v(t._s(t.transactionHistory.fee))])]),s("tr",[s("td",{staticClass:"table__key",attrs:{width:"30%"}},[t._v("message")]),s("td",{staticClass:"table__value",attrs:{width:"70%"}},[t._v(t._s(t.transactionHistory.message))])]),s("tr",[s("td",{staticClass:"table__key",attrs:{width:"30%"}},[t._v("date")]),s("td",{staticClass:"table__value",attrs:{width:"70%"}},[t._v(t._s(t._f("dateFormat")(t.transactionHistory.date)))])])])])],1):t._e()],1)},C=[];let S=class extends p["d"]{constructor(){super(...arguments),this.transactionHistory=null}mounted(){this.configure(),console.log(this.transactionId)}async configure(){this.onLoadTransactionHistory()}async onLoadTransactionHistory(){if(this.$store.commit("startLoading"),void 0!==this.transactionId){try{this.transactionHistory=await this.loadTransactionHistoryUseCase.executeTransferHistory(this.transactionId),console.log(this.transactionHistory)}catch(t){console.error(t)}this.$store.commit("stopLoading")}}};m["__decorate"]([Object(p["b"])("LoadTransactionHistoryUseCase")],S.prototype,"loadTransactionHistoryUseCase",void 0),m["__decorate"]([Object(p["c"])()],S.prototype,"transactionId",void 0),S=m["__decorate"]([Object(p["a"])({name:"TransactionPage",computed:Object(g["b"])(["isLoading"]),filters:{dateFormat(t){return Object(y["format"])(t,"YYYY/MM/DD HH:mm:ss")}}})],S);var I=S,F=I,L=(s("00c6"),Object(i["a"])(F,T,C,!1,null,"5005f862",null)),M=L.exports,O=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"assetexchangepage"},[s("v-flex",{attrs:{xs12:"",sm6:"","offset-sm3":""}},[s("v-flex",{staticStyle:{"margin-top":"8px"}},[s("h1",[t._v("Asset exchange")])]),s("v-flex",{staticStyle:{"margin-top":"8px"}},[s("v-card",[s("v-card-actions",[s("v-card-title",[s("h4",[t._v("Asset list")])]),s("v-spacer"),s("v-btn",{attrs:{fab:"",small:"",text:"",loading:t.isLoading},on:{click:function(e){return t.onLoadAssetList()}}},[s("v-icon",[t._v("cached")])],1)],1),0!==t.assetList.length?s("v-flex",{staticStyle:{margin:"0 16px"}},[s("v-data-table",{attrs:{headers:t.headers,items:t.assetList,options:t.pagination,"hide-default-footer":"","no-data-text":""},on:{"update:options":function(e){t.pagination=e}},scopedSlots:t._u([{key:"item",fn:function(e){return[s("tr",{staticClass:"asset--list__value",on:{click:function(s){return t.onClickAssetList(e.item)}}},[s("td",{attrs:{width:"40%"}},[t._v(t._s(e.item.namespace))]),s("td",{attrs:{width:"30%"}},[t._v(t._s(e.item.exchangeAmount))]),s("td",{attrs:{width:"40%"}},[t._v(t._s(t._f("dateFormat")(e.item.createdAt.toDate())))])])]}}],null,!1,592860637)})],1):t._e(),s("v-card-actions",[s("v-card-title",[s("h4",[t._v("Exchange")])])],1),s("v-form",{staticStyle:{margin:"0 26px"}},[s("v-text-field",{attrs:{label:"asset name",placeholder:"Asset1",disabled:""},model:{value:t.exchangeAssetForm.name,callback:function(e){t.$set(t.exchangeAssetForm,"name",e)},expression:"exchangeAssetForm.name"}}),s("v-text-field",{attrs:{label:"exchange NEM amount",type:"number",disabled:""},model:{value:t.exchangeAssetForm.exchangeNemAmount,callback:function(e){t.$set(t.exchangeAssetForm,"exchangeNemAmount",e)},expression:"exchangeAssetForm.exchangeNemAmount"}}),s("v-text-field",{attrs:{label:"get amount",type:"number",required:""},model:{value:t.exchangeAssetForm.amount,callback:function(e){t.$set(t.exchangeAssetForm,"amount",e)},expression:"exchangeAssetForm.amount"}})],1),s("v-flex",{staticStyle:{"padding-bottom":"20px"}},[s("v-btn",{staticClass:"white--text",attrs:{color:"blue",loading:t.isLoading,disabled:t.isLoading},on:{click:function(e){return t.onExchangeAsset()}}},[t._v("EXCHANGE")])],1)],1)],1),s("v-flex",{staticStyle:{"margin-top":"24px"}},[s("h1",[t._v("Create asset")])]),s("v-flex",{staticStyle:{"margin-top":"8px"}},[s("v-card",[s("v-card-actions",[s("v-card-title",[s("h4",[t._v("Create")])])],1),s("v-form",{staticStyle:{margin:"0 26px"}},[s("v-text-field",{attrs:{label:"name",placeholder:"shohei-ticket",required:""},model:{value:t.assetForm.name,callback:function(e){t.$set(t.assetForm,"name",e)},expression:"assetForm.name"}}),s("v-text-field",{attrs:{label:"supply max amount",type:"number",required:""},model:{value:t.assetForm.maxAmount,callback:function(e){t.$set(t.assetForm,"maxAmount",e)},expression:"assetForm.maxAmount"}}),s("v-text-field",{attrs:{label:"exchange NEM amount",type:"number",required:""},model:{value:t.assetForm.exchangeNemAmount,callback:function(e){t.$set(t.assetForm,"exchangeNemAmount",e)},expression:"assetForm.exchangeNemAmount"}})],1),s("v-flex",{staticStyle:{"padding-bottom":"20px"}},[s("v-btn",{staticClass:"white--text",attrs:{color:"blue",loading:t.isLoading,disabled:t.isLoading},on:{click:function(e){return t.onCreateAsset()}}},[t._v("CREATE")])],1)],1)],1)],1)],1)},P=[];class j{constructor(t,e,s,a,o,n,i){this.namespace=t,this.maxAmount=e,this.exchangeAmount=s,this.supplyMutable=a,this.transferable=o,this.divisibility=n,this.durationCount=i}}let E=class extends p["d"]{constructor(){super(...arguments),this.assetList=[],this.headers=[{text:"namespace",value:"namespace",align:"center"},{text:"exchange NEM",value:"exchangeAmount",align:"center"},{text:"createdAt",value:"createdAt",align:"center"}],this.pagination={descending:!0,itemsPerPage:-1},this.exchangeAssetForm={name:"",assetId:"",amount:0,exchangeNemAmount:0},this.assetForm={name:"",maxAmount:0,exchangeNemAmount:0}}mounted(){this.configure()}async configure(){await this.onLoadAssetList(),await this.onLoadAggregateBondedTransactions()}onClickAssetList(t){console.log("onClickAssetList",t),this.setExchangeForm(t)}async onExchangeAsset(){this.$store.commit("startLoading");let t="";try{const s=this.exchangeAssetForm.assetId,a=this.assetList.filter(t=>t.mosaicId===s)[0],o=Number(this.exchangeAssetForm.exchangeNemAmount),n=Number(this.exchangeAssetForm.amount);console.log("onExchangeAsset",o,a.creatorPublicKey,n,s),t=await this.assetExchangeUseCase.exchangeAsset(o,a.creatorPublicKey,n,s)}catch(e){console.error("onExchangeAsset",e),t=e.message}p["d"].prototype.$toast(t),this.$store.commit("stopLoading")}async onCreateAsset(){this.$store.commit("startLoading");let t="";try{const s=this.assetForm.name,a=Number(this.assetForm.maxAmount),o=Number(this.assetForm.exchangeNemAmount),n=new j(s,a,o,!0,!0,0);console.log("onCreateAsset",n),t=await this.assetExchangeUseCase.createAsset(n),this.clearForm(),this.onLoadAssetList()}catch(e){console.error("onCreateAsset",e),t=e.message}p["d"].prototype.$toast(t),this.$store.commit("stopLoading")}async onLoadAssetList(){this.$store.commit("startLoading");try{this.assetList=await this.assetExchangeUseCase.loadAssetList(),0!==this.assetList.length&&this.setExchangeForm(this.assetList[0])}catch(t){console.error("onLoadAssetList",t)}this.$store.commit("stopLoading")}async onLoadAggregateBondedTransactions(t=!1){try{await this.assetExchangeUseCase.loadAggregateBondedTransactions(100,void 0)}catch(e){console.error("onLoadAgregateTransactions",e)}}setExchangeForm(t){this.exchangeAssetForm.name=t.namespace,this.exchangeAssetForm.assetId=t.mosaicId,this.exchangeAssetForm.exchangeNemAmount=t.exchangeAmount}clearForm(){this.assetForm={name:"",maxAmount:0,exchangeNemAmount:0}}};m["__decorate"]([Object(p["b"])("AssetExchangeUseCase")],E.prototype,"assetExchangeUseCase",void 0),E=m["__decorate"]([Object(p["a"])({name:"AssetExchangePage",computed:Object(g["b"])(["isLoading"]),filters:{dateFormat(t){return Object(y["format"])(t,"YYYY/MM/DD HH:mm:ss")}}})],E);var K=E,R=K,U=(s("cc0e"),Object(i["a"])(R,O,P,!1,null,"19d8d7de",null)),$=U.exports;a["default"].use(d["a"]);var D=new d["a"]({mode:"history",base:"/nem2-wallet/",routes:[{path:"/",name:"home_page",component:N},{path:"/transaction_page/:transactionId",name:"transaction_page",component:M,props:!0},{path:"/asset_exchange_page",name:"asset_exchange_page",component:$}]});a["default"].use(g["a"]);var B=new g["a"].Store({state:{isLoading:!1},mutations:{stopLoading(t){t.isLoading=!1},startLoading(t){t.isLoading=!0}},actions:{}}),W=s("9483");Object(W["a"])("/nem2-wallet/service-worker.js",{ready(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered(){console.log("Service worker has been registered.")},cached(){console.log("Content has been cached for offline use.")},updatefound(){console.log("New content is downloading.")},updated(){console.log("New content is available; please refresh.")},offline(){console.log("No internet connection found. App is running in offline mode.")},error(t){console.error("Error during service worker registration:",t)}});s("cc20");var q=s("7869"),J=s.n(q),Y=s("6112"),G=s.n(Y);class V{constructor(t,e){this.walletRepository=t,this.namespaceRepository=e}async execute(t){try{return await this.walletRepository.loadBalance(t)}catch(e){throw e}}}class z{constructor(t){this.repository=t}async execute(){const t=await this.repository.loadWallet();return void 0!==t?t:await this.repository.createWallet()}}class Q{constructor(t,e){this.transactionRepository=t,this.walletRepository=e}async execute(t){try{const s=await this.walletRepository.loadWallet(),a=s.privateKey;return await this.transactionRepository.sendAsset(a,t)}catch(e){throw e}}}class X{constructor(t,e){this.transactionRepository=t,this.walletRepository=e}async executeTransferHistory(t){try{return await this.transactionRepository.transactionHistory(t)}catch(e){throw e}}async executeTransferHistoryAll(t,e){try{const a=await this.walletRepository.loadWallet(),o=a.publicKey;return await this.transactionRepository.transactionHistoryAll(o,t,e)}catch(s){throw s}}}class Z{constructor(t,e,s,a,o){this.receiverPrivateKey=t,this.exchangeNemAmount=e,this.distributorPublicKey=s,this.distributeRawAmount=a,this.distributeAssetId=o}}var tt=s("d2f4");class et extends tt["Doc"]{static modelName(){return et.collectionName}modelName(){return et.collectionName}}et.collectionName="asset",m["__decorate"]([tt["Field"]],et.prototype,"uid",void 0),m["__decorate"]([tt["Field"]],et.prototype,"namespace",void 0),m["__decorate"]([tt["Field"]],et.prototype,"mosaicId",void 0),m["__decorate"]([tt["Field"]],et.prototype,"exchangeAmount",void 0),m["__decorate"]([tt["Field"]],et.prototype,"creatorAddress",void 0),m["__decorate"]([tt["Field"]],et.prototype,"creatorPublicKey",void 0);class st{constructor(t,e,s,a,o){this.transactionRepository=t,this.walletRepository=e,this.aggregateRepository=s,this.mosaicRepository=a,this.namespaceRepository=o}async createAsset(t){let e;try{console.log("asset",t);const a=await this.walletRepository.loadWallet();if(void 0===a)throw new Error("wallet is nothing..");const o=a.privateKey,n=a.address,i=a.publicKey,r=t.namespace,c=t.exchangeAmount,l=await this.walletRepository.loadAccount(n);console.log("account",l.mosaics);const d=await this.namespaceRepository.loadNamespace(r);if(console.log("status",d),void 0!==d)return"Already exist namespace.";const h=await this.namespaceRepository.createNamespaceTxAggregate(o,r,100);console.log("namespaceTxAggregate",h);const u=await this.mosaicRepository.createMosaicDefinitionTxAggregate(o,t),m=u.mosaicId;console.log("mosaicDefinitionTxAggregate",u);const p=await this.mosaicRepository.createMosaicSupplyChangeTxAggregate(o,m,t.maxAmount);console.log("mosaicSupplyChangeTxAggregate",p);const g=await this.namespaceRepository.createMosaicToNamespaceTxAggregate(o,r,m);console.log("mosaicToNamespaceTxAggregate",g);const y=await this.aggregateRepository.requestComplete(o,[h,u.aggregate,p,g]);e=`SUCCESS: ${y.hash}`,console.log("result",e);const v=new et;v.uid=v.id,v.namespace=r,v.mosaicId=m,v.exchangeAmount=c,v.creatorAddress=n,v.creatorPublicKey=i,await v.save(),console.log("save")}catch(s){throw s}return e}async loadAssetList(){let t=[];try{const s=tt["firestore"].collection(`version/${et.version()}/${et.collectionName}`).orderBy("createdAt","desc"),a=await s.get();t=a.docs.filter(t=>t.exists).map(t=>{const e=new et(t.id),s=t.data();return e.setData(s),e}),console.log("loadAssetList",t)}catch(e){throw e}return t}async exchangeAsset(t,e,s,a){let o;try{const i=await this.walletRepository.loadWallet(),r=i.privateKey,c=await this.mosaicRepository.loadMosaicInfo(a),l=s/Math.pow(10,c.divisibility),d=new Z(r,t,e,l,a),h=await this.aggregateRepository.requestAggregateEscrowAsset(d);o=`SUCCESS: ${h.hash}`,console.log("aggregateEscrowAsset",o)}catch(n){throw n}return o}async consigAggregate(){let t;try{const s=await this.walletRepository.loadWallet(),a=s.privateKey,o=await this.aggregateRepository.consigAggregate(a);t=o.message,console.log("consigAggregate",t)}catch(e){throw e}return t}async loadAggregateBondedTransactions(t,e){let s;try{const o=await this.walletRepository.loadWallet(),n=o.privateKey;s=await this.aggregateRepository.aggregateBondedTransactions(n,t,e),console.log("loadAggregateBondedTransactions",s)}catch(a){throw a}return s}}var at=s("db6a"),ot=s("a002"),nt=s.n(ot),it=s("1758"),rt=s("ebb6"),ct=s("a6c5");class lt{constructor(t,e,s,a){this.address=t,this.publicKey=e,this.privateKey=s,this.networkType=a}toJSON(){return{address:this.address,publicKey:this.publicKey,privateKey:this.privateKey,networkType:this.networkType}}}class dt{constructor(t,e,s,a,o){this.mosaicId=t,this.relativeAmount=e,this.divisibility=s,this.rawValue=a,this.namespace=o}}class ht{constructor(t){this.nemNode=t,this.accountHttp=new at["AccountHttp"](t.endpoint),this.mosaicHttp=new at["MosaicHttp"](t.endpoint),this.mosaicService=new at["MosaicService"](this.accountHttp,this.mosaicHttp),this.localStorageKey="nem2-wallet"}async createWallet(){const t=at["Account"].generateNewAccount(this.nemNode.network),e=new lt(t.address.plain(),t.publicKey,t.privateKey,t.address.networkType.valueOf());return await nt.a.setItem(this.localStorageKey,e.toJSON()),e}async loadWallet(){const t=await nt.a.getItem(this.localStorageKey);return console.log("loadWallet",t),null!==t?new lt("address"in t?t.address:void 0,"publicKey"in t?t.publicKey:void 0,"privateKey"in t?t.privateKey:void 0,"networkType"in t?t.networkType:void 0):void 0}async loadAccount(t){const e=at["Address"].createFromRawAddress(t);return new Promise((t,s)=>{this.accountHttp.getAccountInfo(e).subscribe(e=>{e.mosaics.forEach(t=>{console.log("mosaic",t.id.toHex(),t.amount.compact())}),t(e)},t=>s(t))})}async loadBalance(t){return new Promise((e,s)=>{const a=at["Address"].createFromRawAddress(t);this.mosaicService.mosaicsAmountViewFromAddress(a).pipe(Object(it["a"])(),Object(rt["a"])(t=>t.map(t=>new dt(t.fullName(),t.relativeAmount(),t.mosaicInfo.divisibility,t)))).subscribe(t=>e(t),t=>s(t))})}async loadBalanceAndNamespace(t){return new Promise((e,s)=>{const a=at["Address"].createFromRawAddress(t);this.mosaicService.mosaicsAmountViewFromAddress(a).pipe(Object(it["a"])(),Object(rt["a"])(t=>{const e=t.map(t=>t.mosaicInfo.mosaicId);return console.log("mosaicIds",e),this.mosaicHttp.getMosaicsNames(e)}),Object(ct["a"])(t=>t)).subscribe(t=>{console.log(t),e(t)},t=>console.error(t))})}}var ut=s("f74f"),mt=s("17f5"),pt=s("5670"),gt=s("f59d");class yt{constructor(t,e){this.message=t,this.hash=e}}class vt{constructor(t,e){this.message=t,this.hash=e}}class wt{constructor(t){this.endpoint=t,this.listener=new at["Listener"](this.endpoint,WebSocket)}async loadStatus(t,e){try{return await this._loadStatus(t,e)}catch(s){throw s}}_loadStatus(t,e){return new Promise((s,a)=>{const o=at["Address"].createFromRawAddress(t);this.listener.open().then(()=>{this.listener.status(o).pipe(Object(pt["a"])(t=>t.hash===e),Object(rt["a"])(t=>new vt(t.status,t.hash))).subscribe(t=>{console.error("loadStatus status",t),a(t)}),this.listener.unconfirmedAdded(o).pipe(Object(pt["a"])(t=>void 0!==t.transactionInfo&&t.transactionInfo.hash===e),Object(rt["a"])(t=>new yt("SUCCESS",t.transactionInfo.hash))).subscribe(t=>{console.log("loadStatus unconfirmedAdded",t),s(t)},t=>console.error("loadStatus unconfirmedAdded",t)),this.listener.confirmed(o).subscribe(t=>console.log("loadStatus confirmed",t),t=>console.error("loadStatus confirmed",t))})})}}class bt{constructor(t,e,s,a,o,n,i,r,c){this.id=t,this.amount=e,this.fee=s,this.toAddress=a,this.fromAddress=o,this.message=n,this.date=i,this.hash=r,this.rawValue=c}}class ft{constructor(t,e=[]){this.nextPagingTransactionId=t,this.histories=e}}class At{constructor(t){this.nemNode=t,this.accountHttp=new at["AccountHttp"](t.endpoint),this.transactionHttp=new at["TransactionHttp"](t.endpoint),this.blockHttp=new at["BlockHttp"](t.endpoint),this.listenerWrapper=new wt(t.wsEndpoint),this.mosaicHttp=new at["MosaicHttp"](t.endpoint),this.namespaceHttp=new at["NamespaceHttp"](t.endpoint)}async sendAsset(t,e){const s=at["Address"].createFromRawAddress(e.address);console.log(e.getRawAmount());const a=at["TransferTransaction"].create(at["Deadline"].create(),s,[new at["Mosaic"](new at["MosaicId"](e.mosaicId),at["UInt64"].fromUint(e.getRawAmount()))],void 0!==e.message?at["PlainMessage"].create(e.message):at["PlainMessage"].create(""),this.nemNode.network),o=at["Account"].createFromPrivateKey(t,this.nemNode.network),n=o.sign(a,this.nemNode.networkGenerationHash);return new Promise((t,e)=>{this.listenerWrapper.loadStatus(o.address.plain(),n.hash).then(e=>t(e)).catch(t=>e(t)),this.transactionHttp.announce(n).subscribe(t=>console.log(t),t=>e(t))})}async transactionHistory(t){return new Promise((e,s)=>{let a;this.transactionHttp.getTransaction(t).pipe(Object(rt["a"])(t=>{return console.log("transactionHistory",t),t}),Object(pt["a"])(t=>t instanceof at["TransferTransaction"]),Object(rt["a"])(t=>{return a=t,a}),Object(rt["a"])(t=>this.blockHttp.getBlockByHeight(t.transactionInfo.height.compact())),Object(ct["a"])(t=>t),Object(rt["a"])(t=>new bt(a.transactionInfo.id,0!==a.mosaics.length?a.mosaics[0].amount.compact()/f.divisibility():0,a.maxFee.compact(),a.recipient instanceof at["Address"]?a.recipient.plain():"",void 0!==a.signer?a.signer.address.plain():"",a.message.payload,void 0!==t?new Date(t.timestamp.compact()+Date.UTC(2016,3,1,0,0,0,0)):void 0,a.transactionInfo.hash,a))).subscribe(t=>e(t),t=>s(t))})}async transactionHistoryAll(t,e,s){try{const o=at["PublicAccount"].createFromPublicKey(t,this.nemNode.network);return await this._transactionHistory(o,new at["QueryParams"](e,s,at["Order"].DESC))}catch(a){throw a}}async unconfirmedTransactions(t,e,s){return new Promise((a,o)=>{const n=at["PublicAccount"].createFromPublicKey(t,this.nemNode.network);this.accountHttp.unconfirmedTransactions(n,new at["QueryParams"](e,s,at["Order"].DESC)).pipe(Object(rt["a"])(t=>{return console.log("unconfirmedTransactions",t),t})).subscribe(t=>a(t),t=>o(t))})}_transactionHistory(t,e){return new Promise((s,a)=>{let o,n=[];this.accountHttp.transactions(t,e).pipe(Object(rt["a"])(t=>{return console.log("transactionHistory",t),0===t.length&&s(new ft(void 0)),t}),Object(ct["a"])(t=>n=t.filter(t=>t instanceof at["TransferTransaction"]).map(t=>t).filter(t=>void 0!==t.transactionInfo&&t.transactionInfo instanceof at["TransactionInfo"])),Object(ct["a"])(t=>{return console.log("transferTransction",t.mosaics[0].id.toHex(),t.transactionInfo.hash,t),Object(ut["b"])(Object(mt["a"])(t),this.blockHttp.getBlockByHeight(t.transactionInfo.height.compact()),t.mosaics[0].id instanceof at["MosaicId"]?this.mosaicHttp.getMosaic(new at["MosaicId"](t.mosaics[0].id.toHex())).pipe(Object(rt["a"])(t=>t.divisibility),Object(gt["a"])(t=>Object(mt["a"])(0))):Object(mt["a"])(6))}),Object(rt["a"])(([t,e,s])=>{return console.log("transactionHistory zip",t,e,s),Object(mt["a"])(new bt(t.transactionInfo.id,0!==t.mosaics.length?t.mosaics[0].amount.compact()/Math.pow(10,s):0,t.maxFee.compact(),t.recipient instanceof at["Address"]?t.recipient.plain():"",void 0!==t.signer?t.signer.address.plain():"",t.message.payload,void 0!==t?new Date(e.timestamp.compact()+Date.UTC(2016,3,1,0,0,0,0)):void 0,t.transactionInfo.hash,t))}),Object(it["a"])(),Object(rt["a"])(t=>{return o=n.slice(-1)[0].transactionInfo.id,new ft(o,t.sort((t,e)=>{const s=t.date.getTime(),a=e.date.getTime();return s>a?-1:s<a?1:0}))})).subscribe(t=>s(t),t=>a(t))})}}class _t{constructor(t){this.nemNode=t,this.accountHttp=new at["AccountHttp"](t.endpoint),this.transactionHttp=new at["TransactionHttp"](t.endpoint),this.listenerWrapper=new wt(t.wsEndpoint)}async requestComplete(t,e){return new Promise((s,a)=>{const o=at["Account"].createFromPrivateKey(t,this.nemNode.network),n=at["AggregateTransaction"].createComplete(at["Deadline"].create(),e,this.nemNode.network,[]),i=o.sign(n,this.nemNode.networkGenerationHash);this.listenerWrapper.loadStatus(o.address.plain(),i.hash).then(t=>s(t)).catch(t=>a(t)),this.transactionHttp.announce(i).subscribe(t=>console.log("request",t),t=>a(t))})}async requestAggregateEscrowAsset(t){return new Promise((e,s)=>{const a=at["Account"].createFromPrivateKey(t.receiverPrivateKey,this.nemNode.network),o=at["PublicAccount"].createFromPublicKey(t.distributorPublicKey,this.nemNode.network),n=at["TransferTransaction"].create(at["Deadline"].create(),o.address,[at["NetworkCurrencyMosaic"].createRelative(t.exchangeNemAmount)],at["PlainMessage"].create(`send ${t.exchangeNemAmount} currency to distributor`),this.nemNode.network),i=at["TransferTransaction"].create(at["Deadline"].create(),a.address,[new at["Mosaic"](new at["MosaicId"](t.distributeAssetId),at["UInt64"].fromUint(t.distributeRawAmount))],at["PlainMessage"].create(`send ${t.distributeRawAmount} (${t.distributeAssetId}) to receiver`),this.nemNode.network),r=at["AggregateTransaction"].createBonded(at["Deadline"].create(),[n.toAggregate(a.publicAccount),i.toAggregate(o)],this.nemNode.network),c=a.sign(r,this.nemNode.networkGenerationHash);console.log("Aggregate Transaction: ",c.hash);const l=at["HashLockTransaction"].create(at["Deadline"].create(),at["NetworkCurrencyMosaic"].createRelative(10),at["UInt64"].fromUint(480),c,this.nemNode.network),d=a.sign(l,this.nemNode.networkGenerationHash);this.listenerWrapper.listener.open().then(()=>{this.transactionHttp.announce(d).subscribe(t=>{console.log("hashLockTransactionSigned",t)},t=>s(t)),this.listenerWrapper.listener.confirmed(a.address).pipe(Object(rt["a"])(t=>{return console.log("listener confirmed",t),t}),Object(pt["a"])(t=>void 0!==t.transactionInfo&&t.transactionInfo.hash===d.hash),Object(ct["a"])(t=>this.transactionHttp.announceAggregateBonded(c)),Object(rt["a"])(t=>new yt("SUCCESS",d.hash))).subscribe(t=>e(t),t=>{console.error("listener confirmed",t),s(t)})}).catch(t=>s(t))})}async consigAggregate(t){return new Promise((e,s)=>{const a=(t,e)=>{const s=at["CosignatureTransaction"].create(t);return e.signCosignatureTransaction(s)},o=at["Account"].createFromPrivateKey(t,this.nemNode.network);this.accountHttp.aggregateBondedTransactions(o.publicAccount).pipe(Object(ct["a"])(t=>t),Object(pt["a"])(t=>!t.signedByAccount(o.publicAccount)),Object(rt["a"])(t=>a(t,o)),Object(ct["a"])(t=>this.transactionHttp.announceAggregateBondedCosignature(t)),Object(rt["a"])(t=>new yt("SUCCESS"))).subscribe(t=>e(t),t=>s(t))})}async aggregateBondedTransactions(t,e,s){return new Promise((a,o)=>{const n=at["Account"].createFromPrivateKey(t,this.nemNode.network);this.accountHttp.aggregateBondedTransactions(n.publicAccount,new at["QueryParams"](e,s,at["Order"].DESC)).pipe(Object(rt["a"])(t=>{return console.log("aggregateBondedTransactions",t),t})).subscribe(t=>a(t),t=>o(t))})}}class xt{constructor(t,e,s,a,o){this.mosaicId=t,this.ownerAddress=e,this.ownerPublicKey=s,this.divisibility=a,this.hash=o}}class Ht{constructor(t,e){this.mosaicId=t,this.aggregate=e}}class kt{constructor(t){this.nemNode=t,this.mosaicHttp=new at["MosaicHttp"](t.endpoint),this.transactionHttp=new at["TransactionHttp"](t.endpoint),this.listenerWrapper=new wt(t.wsEndpoint)}async loadMosaicInfo(t){return new Promise((e,s)=>{this.mosaicHttp.getMosaic(new at["MosaicId"](t)).pipe(Object(rt["a"])(e=>new xt(t,e.owner.address.plain(),e.owner.publicKey,e.divisibility))).subscribe(t=>e(t),t=>s(t))})}async createMosaic(t,e){return new Promise((s,a)=>{const o=at["Account"].createFromPrivateKey(t,this.nemNode.network),n=this._createMosaicDefinitionTx(t,e).transaction,i=this._createMosaicSupplyChangeTx(n.mosaicId.toHex(),e.maxAmount),r=at["AggregateTransaction"].createComplete(at["Deadline"].create(),[n.toAggregate(o.publicAccount),i.toAggregate(o.publicAccount)],this.nemNode.network,[]),c=o.sign(r,this.nemNode.networkGenerationHash);this.listenerWrapper.loadStatus(o.address.plain(),c.hash).then(t=>s(new xt(n.mosaicId.toHex(),o.address.plain(),o.publicAccount.publicKey,e.divisibility,t.hash))).catch(t=>a(t)),this.transactionHttp.announce(c).subscribe(t=>console.log("createMosaic",t,n.mosaicId),t=>a(t))})}createMosaicDefinitionTxAggregate(t,e){const s=at["Account"].createFromPrivateKey(t,this.nemNode.network),a=this._createMosaicDefinitionTx(t,e);return new Ht(a.mosaicId,a.transaction.toAggregate(s.publicAccount))}createMosaicSupplyChangeTxAggregate(t,e,s){const a=at["Account"].createFromPrivateKey(t,this.nemNode.network);return this._createMosaicSupplyChangeTx(e,s).toAggregate(a.publicAccount)}_createMosaicDefinitionTx(t,e){const s=at["Account"].createFromPrivateKey(t,this.nemNode.network),a=at["MosaicNonce"].createRandom(),o=at["MosaicId"].createFromNonce(a,s.publicAccount),n=at["MosaicDefinitionTransaction"].create(at["Deadline"].create(),a,o,at["MosaicProperties"].create({supplyMutable:e.supplyMutable,transferable:e.transferable,divisibility:e.divisibility,duration:void 0!==e.durationCount?at["UInt64"].fromUint(e.durationCount):void 0}),this.nemNode.network);return{mosaicId:o.toHex(),transaction:n}}_createMosaicSupplyChangeTx(t,e){const s=at["MosaicSupplyChangeTransaction"].create(at["Deadline"].create(),new at["MosaicId"](t),at["MosaicSupplyType"].Increase,at["UInt64"].fromUint(e),this.nemNode.network);return s}}class Nt{constructor(t,e,s,a){this.namespace=t,this.namespaceId=e,this.ownerAddress=s,this.ownerPublicKey=a}}class Tt{constructor(t){this.nemNode=t,this.transactionHttp=new at["TransactionHttp"](t.endpoint),this.namespaceHttp=new at["NamespaceHttp"](t.endpoint),this.listenerWrapper=new wt(t.wsEndpoint)}async loadNamespace(t){return new Promise((e,s)=>{const a=new at["NamespaceId"](t);this.namespaceHttp.getNamespace(a).pipe(Object(rt["a"])(t=>{return console.log("item",t),t}),Object(pt["a"])(t=>t.levels.length>0),Object(rt["a"])(e=>new Nt(t,e.levels[0].toHex(),e.owner.address.plain(),e.owner.publicKey))).subscribe(t=>e(t),t=>{this._errorNotFound(JSON.parse(t.message))?e(void 0):s(t)})})}async loadNamespacesFromAccount(t){return new Promise((e,s)=>{const a=at["Address"].createFromRawAddress(t);this.namespaceHttp.getNamespacesFromAccount(a).pipe(Object(rt["a"])(t=>t.filter(t=>t.levels.length>0).map(t=>new Nt(name,t.levels[0].toHex(),t.owner.address.plain(),t.owner.publicKey)))).subscribe(t=>{console.log("loadNamespacesFromAccount",t),e(t)},t=>s(t))})}async createNamespace(t,e,s){return new Promise((a,o)=>{const n=this._createNamespaceTx(t,s),i=at["Account"].createFromPrivateKey(e,this.nemNode.network),r=i.sign(n,this.nemNode.networkGenerationHash);this.listenerWrapper.loadStatus(i.address.plain(),r.hash).then(t=>a(t)).catch(t=>o(t)),this.transactionHttp.announce(r).subscribe(t=>console.log(t),t=>o(t))})}async createSubNamespace(t,e,s){return new Promise((a,o)=>{const n=at["RegisterNamespaceTransaction"].createSubNamespace(at["Deadline"].create(),t,e,this.nemNode.network),i=at["Account"].createFromPrivateKey(s,this.nemNode.network),r=i.sign(n,this.nemNode.networkGenerationHash);console.log("createSubNamespace",n,r),this.listenerWrapper.loadStatus(i.address.plain(),r.hash).then(t=>a(t)).catch(t=>o(t)),this.transactionHttp.announce(r).subscribe(t=>console.log(t),t=>o(t))})}async registMosaicToNamespace(t,e,s){return new Promise((a,o)=>{const n=this._createMosaicToNamespaceTx(t,e),i=at["Account"].createFromPrivateKey(s,this.nemNode.network),r=i.sign(n,this.nemNode.networkGenerationHash);this.listenerWrapper.loadStatus(i.address.plain(),r.hash).then(t=>a(t)).catch(t=>o(t)),this.transactionHttp.announce(r).subscribe(t=>console.log("registeMosaicToNamespace",t),t=>o(t))})}async registNamespaceToAddress(t,e,s){return new Promise((a,o)=>{const n=new at["NamespaceId"](t),i=at["Address"].createFromRawAddress(e),r=at["AliasTransaction"].createForAddress(at["Deadline"].create(),at["AliasActionType"].Link,n,i,this.nemNode.network),c=at["Account"].createFromPrivateKey(s,this.nemNode.network),l=c.sign(r,this.nemNode.networkGenerationHash);this.listenerWrapper.loadStatus(c.address.plain(),l.hash).then(t=>a(t)).catch(t=>o(t)),this.transactionHttp.announce(l).subscribe(t=>console.log("registeNamespaceToAddress",r,t),t=>o(t))})}createNamespaceTxAggregate(t,e,s){console.log(t,e);const a=at["Account"].createFromPrivateKey(t,this.nemNode.network);return this._createNamespaceTx(e,s).toAggregate(a.publicAccount)}createMosaicToNamespaceTxAggregate(t,e,s){const a=at["Account"].createFromPrivateKey(t,this.nemNode.network);return this._createMosaicToNamespaceTx(e,s).toAggregate(a.publicAccount)}_createNamespaceTx(t,e){const s=at["RegisterNamespaceTransaction"].createRootNamespace(at["Deadline"].create(),t,at["UInt64"].fromUint(e),this.nemNode.network);return s}_createMosaicToNamespaceTx(t,e){const s=at["AliasTransaction"].createForMosaic(at["Deadline"].create(),at["AliasActionType"].Link,new at["NamespaceId"](t),new at["MosaicId"](e),this.nemNode.network);return s}_errorNotFound(t){return"statusCode"in t&&404===t.statusCode}}class Ct{constructor(t,e,s,a,o){this.host=t,this.port=s,this.network=a,this.networkGenerationHash=o,this.endpoint=`${t}:${s}`,this.wsEndpoint=`${e}:${s}`}}const St="https://catapult-test.opening-line.jp",It="wss://catapult-test.opening-line.jp",Ft="3001",Lt=Number("144"),Mt="453052FDC4EB23BF0D7280C103F7797133A633B68A81986165B76FCE248AB235",Ot=new Ct(St,It,Ft,Lt,Mt),Pt=new ht(Ot),jt=new At(Ot),Et=new _t(Ot),Kt=new kt(Ot),Rt=new Tt(Ot),Ut={LoadBalanceUseCase:new V(Pt,Rt),LoadWalletUseCase:new z(Pt),SendCoinUseCase:new Q(jt,Pt),LoadTransactionHistoryUseCase:new X(jt,Pt),AssetExchangeUseCase:new st(jt,Pt,Et,Kt,Rt)};var $t=s("ce5b"),Dt=s.n($t);s("bf40"),s("e89a");const Bt={apiKey:"AIzaSyD0uyhQLAvEEwFCmDcTb71S_qm97A6IKIU",authDomain:"nem2-wallet-d3f63.firebaseapp.com",databaseURL:"https://nem2-wallet-d3f63.firebaseio.com",projectId:"nem2-wallet-d3f63",storageBucket:"nem2-wallet-d3f63.appspot.com",messagingSenderId:"910157321607",appId:"1:910157321607:web:5ea163a8aeadb5cf"},Wt=A["initializeApp"](Bt);tt["initialize"](Wt.firestore(),Wt.firestore().collection("version").doc("1"));a["default"].use(Dt.a),a["default"].use(J.a,{defaultType:"bottom",duration:3e3,wordWrap:!0,width:"280px"}),a["default"].use(G.a),a["default"].config.productionTip=!1,new a["default"]({provide:Ut,router:D,store:B,vuetify:new Dt.a,render:t=>t(l)}).$mount("#app")},fedb:function(t,e,s){}});
//# sourceMappingURL=app.0d8e8287.js.map